name: Setuptools

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  standard-packages:
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [16.x]
        python-versions: ['3.8', '3.9', '3.10']
        os: [ubuntu-18.04, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: npm build and test ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: ./gui
        run: npm ci
      - name: Run npm build
        run: npm run build --if-present
        working-directory: ./gui

      - name: Install Taipy without dependencies
        run: |
          pip install .
          rm -r taipy  # Removal of Taipy code to ensure the use of the installed package
          pip install pytest pytest-mock pytest-playwright
          pytest

  optionals-packages:
    timeout-minutes: 10
    strategy:
      matrix:
        node-version: [16.x]
        python-versions: ['3.8', '3.9', '3.10']
        os: [ubuntu-18.04, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-versions }}

      - name: npm build and test ${{ matrix.node-version }} on ${{ matrix.os }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        working-directory: ./gui
        run: npm ci
      - name: Run npm build
        run: npm run build --if-present
        working-directory: ./gui

      - name: Add optionals dependencies
        run: |
          # Extract optionals packages before installing them
          grep -n 'setup(' setup.py | cut -d ":" -f 1 | xargs -I% bash -c "expr % - 1" | xargs -I% bash -c 'head -n% setup.py' > setup_packages.py
          echo "[print(k) for k in extras_require.keys()]" >> setup_packages.py
          python setup_packages.py | xargs -I% bash -c "pip install .[%]"
          rm -r taipy  # Removal of Taipy code to ensure the use of the installed package.
          # Run test with optionals packages installed
          pip install pytest pytest-mock pytest-playwright
          pytest > pytest_res
          cat pytest_res
          echo "Ensure that no tests are skipped"
          tail -n1 pytest_res | grep --invert-match "skipped"
          echo "Ensure that no warnings are issued"
          tail -n1 pytest_res | grep --invert-match "warning"
